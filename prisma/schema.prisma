generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  id         Int      @id(map: "comments_pk") @default(autoincrement())
  review_id  Int
  user_id    Int
  text       String   @db.VarChar(250)
  created_at DateTime @default(now()) @db.Timestamp(6)
  reviews    reviews  @relation(fields: [review_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_fk0")
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_fk1")
}

model games {
  id      Int       @id(map: "games_pk") @default(autoincrement())
  name    String    @unique(map: "unique_name")
  reviews reviews[]
}

model reviews {
  id         Int        @id(map: "reviews_pk") @default(autoincrement())
  user_id    Int
  game_id    Int
  rating     Decimal    @db.Decimal(3, 1)
  review     String
  created_at DateTime   @default(now()) @db.Timestamp(6)
  comments   comments[]
  users      users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "reviews_fk0")
  games      games      @relation(fields: [game_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "reviews_fk1")
}

model users {
  id          Int        @id(map: "users_pk") @default(autoincrement())
  name        String     @db.VarChar(50)
  picture_url String?
  email       String     @unique @db.VarChar(60)
  password    String     @db.VarChar(60)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  comments    comments[]
  reviews     reviews[]
}
